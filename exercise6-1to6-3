'''
6-1 人 :使用一个字典来存储一个熟人的信息，包括名、姓、年龄 和居住的城市。
该字典应包含键first_name 、last_name 、 age 和city 。将存储在该字典中的每项信息
都打印出来。
'''
person = {
	'first_name': '三',
	'last_name':'张', 
	'gender':'male', 
	'age': 19, 
	'residence': 'Shanghai'
}
for a in person:
	print(a + ':' + str(person[a]))


'''
6-2 喜欢的数字 :使用一个字典来存储一些人喜欢的数字。
请想出 5个人的名字，并将这些名字用作字典中的键;想出每个人喜欢的 一个数字，
并将这些数字作为值存储在字典中。打印每个人的名 字和喜欢的数字。
为让这个程序更有趣，通过询问朋友确保数据 是真实的。
'''
favorite_colors = {
	'Peter': 'blue',
	'Alice': 'pink',
	'Kitty': 'green',
	'Ben': 'black',
	'Tom': 'brown',
}
for b in favorite_colors:
	print(b+"'s favorite color is " + favorite_colors[b] + '.')

'''
6-3 词汇表 :Python字典可用于模拟现实生活中的字典，但为避免 混淆，我们将后者称为词汇表。
想出你在前面学过的5个编程词汇，将它们用作词汇表中的 键，并将它们的含义作为值存储在词汇表中。
以整洁的方式打印每个词汇及其含义。为此，你可以先打印 词汇，在它后面加上一个冒号，再打印词汇的
含义;也可在 一行打印词汇，再使用换行符(\n )插入一个空行，然后在 下一行以缩进的方式打印词汇的
含义。
'''
vocabularies = {
	'lower()':'\n字符串内字母都小写',
	'upper()':'\n字符串内字母都大写',
	'append()':'\n在列表的最后添加新的元素',
	'print()':'\n输出函数',
	'strip()':'\n删除字符串两边的空格',
	'title()':'\n首字母大写',
}
for element in vocabularies:
	print(element + vocabularies[element])